public class MonstersValley2 {
    public static int minimumPrice(int[] dread, int[] price){
        int n = dread.length;
        int totalprice = 0;
        int minPrice = 0;
        for(int p : price){
             totalprice += p;
        }

        long[][] dp = new long[n + 1][totalprice + 1];
        for(int i = 0; i <= n; i++){
            for(int j = 0; j <= totalprice; j++){
                dp[i][j] = -1;
            }
        }
        dp[0][0] = 0;

        for(int i = 0; i < n; i++){
            for(int j = 0; j <= totalprice; j++){
                if(dp[i][j] == -1) continue;

                if(j + price[i] <= totalprice){
                    dp[i + 1][j + price[i]] = Math.max(dp[i + 1][j + price[i]] , dp[i][j] + dread[i]);
                }

                if(dp[i][j] >= dread[i]){
                    dp[i + 1][j] = Math.max(dp[i + 1][j] , dp[i][j]);
                }
            }
        }

        for(int j = 0; j <= totalprice; j++){
            if(dp[n][j] != -1){
                minPrice = j;
                break;
            }
        }
        return minPrice;

    }

    public static void main(String[] args) {
        int dread[] ={5216, 12512, 613, 1256, 66, 17202, 30000, 23512, 2125, 33333};
        int price[] ={2, 2, 1, 1, 1, 1, 2, 1, 2, 1};
        int MinPrice = minimumPrice(dread, price);
        System.out.println(MinPrice);
        
    }
}
